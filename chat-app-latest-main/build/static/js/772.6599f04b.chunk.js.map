{"version":3,"file":"static/js/772.6599f04b.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","components/hook-form/RHFAutocomplete.js","sections/dashboard/CreateGroup.js","pages/dashboard/Group.js"],"sourcesContent":["import React from \"react\";\nimport { Box, Badge, Stack, Avatar, Typography } from \"@mui/material\";\nimport { styled, useTheme, alpha } from \"@mui/material/styles\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SelectConversation } from \"../redux/slices/app\";\n\nconst truncateText = (string, n) => {\n  return string?.length > n ? `${string?.slice(0, n)}...` : string;\n};\n\nconst StyledChatBox = styled(Box)(({ theme }) => ({\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n}));\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}));\n\nconst ChatElement = ({ img, name, msg, time, unread, online, id }) => {\n  const dispatch = useDispatch();\n  const {room_id} = useSelector((state) => state.app);\n  const selectedChatId = room_id?.toString();\n\n  let isSelected = +selectedChatId === id;\n\n  if (!selectedChatId) {\n    isSelected = false;\n  }\n\n  const theme = useTheme();\n\n  return (\n    <StyledChatBox\n      onClick={() => {\n        dispatch(SelectConversation({room_id: id}));\n      }}\n      sx={{\n        width: \"100%\",\n\n        borderRadius: 1,\n\n        backgroundColor: isSelected\n          ? theme.palette.mode === \"light\"\n            ? alpha(theme.palette.primary.main, 0.5)\n            : theme.palette.primary.main\n          : theme.palette.mode === \"light\"\n          ? \"#fff\"\n          : theme.palette.background.paper,\n      }}\n      p={2}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems={\"center\"}\n        justifyContent=\"space-between\"\n      >\n        <Stack direction=\"row\" spacing={2}>\n          {\" \"}\n          {online ? (\n            <StyledBadge\n              overlap=\"circular\"\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n              variant=\"dot\"\n            >\n              <Avatar alt={name} src={img} />\n            </StyledBadge>\n          ) : (\n            <Avatar alt={name} src={img} />\n          )}\n          <Stack spacing={0.3}>\n            <Typography variant=\"subtitle2\">{name}</Typography>\n            <Typography variant=\"caption\">{truncateText(msg, 20)}</Typography>\n          </Stack>\n        </Stack>\n        <Stack spacing={2} alignItems={\"center\"}>\n          <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\n            {time}\n          </Typography>\n          <Badge\n            className=\"unread-count\"\n            color=\"primary\"\n            badgeContent={unread}\n          />\n        </Stack>\n      </Stack>\n    </StyledChatBox>\n  );\n};\n\nexport default ChatElement;\n","import { styled, alpha } from \"@mui/material/styles\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: 20,\n  backgroundColor: alpha(theme.palette.background.paper, 1),\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nexport default Search;\n","import { styled } from \"@mui/material/styles\";  \n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  export default SearchIconWrapper;\n  ","import { InputBase } from \"@mui/material\";\nimport {styled} from \"@mui/material/styles\";\n\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      width: \"100%\",\n    },\n  }));\n\n  export default StyledInputBase;","import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { Autocomplete, TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFAutocomplete.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFAutocomplete({ name, label, helperText, ...other }) {\n  const { control, setValue } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <Autocomplete\n          {...field}\n          onChange={(event, newValue) => setValue(name, newValue, { shouldValidate: true })}\n          renderInput={(params) => (\n            <TextField\n              label={label}\n              error={!!error}\n              helperText={error ? error?.message : helperText}\n              {...params}\n            />\n          )}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  Stack,\n} from \"@mui/material\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport FormProvider from \"../../components/hook-form/FormProvider\";\nimport { RHFTextField } from \"../../components/hook-form\";\nimport RHFAutocomplete from \"../../components/hook-form/RHFAutocomplete\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TAGS_OPTION = [\n  \"Toy Story 3\",\n  \"Logan\",\n  \"Full Metal Jacket\",\n  \"Dangal\",\n  \"The Sting\",\n  \"2001: A Space Odyssey\",\n  \"Singin' in the Rain\",\n  \"Toy Story\",\n  \"Bicycle Thieves\",\n  \"The Kid\",\n  \"Inglourious Basterds\",\n  \"Snatch\",\n  \"3 Idiots\",\n];\n\nconst CreateGroupForm = ({ handleClose }) => {\n  const NewGroupSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n\n    members: Yup.array().min(2, \"Must have at least 2 members\"),\n  });\n\n  const defaultValues = {\n    title: \"\",\n\n    tags: [],\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(NewGroupSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      //  API Call\n      console.log(\"DATA\", data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <RHFTextField name=\"title\" label=\"Title\" />\n        <RHFAutocomplete\n          name=\"members\"\n          label=\"Members\"\n          multiple\n          freeSolo\n          options={TAGS_OPTION.map((option) => option)}\n          ChipProps={{ size: \"medium\" }}\n        />\n        <Stack\n          spacing={2}\n          direction={\"row\"}\n          alignItems=\"center\"\n          justifyContent={\"end\"}\n        >\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button type=\"submit\" variant=\"contained\">\n            Create\n          </Button>\n        </Stack>\n      </Stack>\n    </FormProvider>\n  );\n};\n\nconst CreateGroup = ({ open, handleClose }) => {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"xs\"\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      sx={{ p: 4 }}\n    >\n      <DialogTitle>{\"Create New Group\"}</DialogTitle>\n\n      <DialogContent sx={{ mt: 4 }}>\n        {/* Create Group Form */}\n        <CreateGroupForm handleClose={handleClose} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CreateGroup;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  IconButton,\n  Link,\n  Divider,\n} from \"@mui/material\";\nimport { MagnifyingGlass, Plus } from \"phosphor-react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\nimport { ChatList } from \"../../data\";\nimport ChatElement from \"../../components/ChatElement\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../components/Search\";\nimport CreateGroup from \"../../sections/dashboard/CreateGroup\";\n\nconst Group = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  }\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  }\n  const theme = useTheme();\n  return (\n    <>\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\n        {/* Left */}\n\n        <Box\n          sx={{\n            overflowY: \"scroll\",\n\n            height: \"100vh\",\n            width: 320,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? \"#F8FAFF\"\n                : theme.palette.background,\n\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n          }}\n        >\n          <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n              direction=\"row\"\n            >\n              <Typography variant=\"h5\">Groups</Typography>\n            </Stack>\n            <Stack sx={{ width: \"100%\" }}>\n              <Search>\n                <SearchIconWrapper>\n                  <MagnifyingGlass color=\"#709CE6\" />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Stack>\n            <Stack\n              justifyContent={\"space-between\"}\n              alignItems={\"center\"}\n              direction={\"row\"}\n            >\n              <Typography variant=\"subtitle2\" sx={{}} component={Link}>\n                Create New Group\n              </Typography>\n              <IconButton onClick={handleOpenDialog}>\n                <Plus style={{ color: theme.palette.primary.main }} />\n              </IconButton>\n            </Stack>\n            <Divider />\n            <Stack sx={{ flexGrow: 1, overflow: \"scroll\", height: \"100%\" }}>\n              <SimpleBarStyle timeout={500} clickOnTrack={false}>\n                <Stack spacing={2.4}>\n                  <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\n                    Pinned\n                  </Typography>\n                  {/* Chat List */}\n                  {ChatList.filter((el) => el.pinned).map((el, idx) => {\n                    return <ChatElement {...el} />;\n                  })}\n                  <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\n                    All Chats\n                  </Typography>\n                  {/* Chat List */}\n                  {ChatList.filter((el) => !el.pinned).map((el, idx) => {\n                    return <ChatElement {...el} />;\n                  })}\n                </Stack>\n              </SimpleBarStyle>\n            </Stack>\n          </Stack>\n        </Box>\n\n        {/* Right */}\n      </Stack>\n      {openDialog && <CreateGroup open={openDialog} handleClose={handleCloseDialog} />}\n    </>\n  );\n};\n\nexport default Group;\n"],"names":["StyledChatBox","styled","Box","theme","cursor","StyledBadge","Badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","img","name","msg","time","unread","online","id","dispatch","useDispatch","room_id","useSelector","state","app","selectedChatId","toString","isSelected","useTheme","onClick","SelectConversation","sx","mode","alpha","primary","main","p","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","alt","src","string","n","length","slice","fontWeight","className","badgeContent","marginRight","marginLeft","padding","pointerEvents","display","InputBase","paddingLeft","FormProvider","children","onSubmit","methods","forwardRef","ref","disabledEffect","effect","other","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","objectFit","lineHeight","overflow","backgroundSize","AvatarPreview","file","imgUrl","preview","zIndex","StyledDropZone","margin","grey","StyledPlaceholder","flexDirection","text","disabled","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","error","helperText","getRootProps","getInputProps","isDragActive","isDragReject","useDropzone","multiple","hasFile","isError","borderColor","bgcolor","Typography","RHFUploadAvatar","control","useFormContext","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","RHFAutocomplete","label","setValue","Autocomplete","onChange","event","newValue","shouldValidate","renderInput","params","Transition","React","props","Slide","TAGS_OPTION","CreateGroupForm","handleClose","NewGroupSchema","Yup","shape","title","required","members","min","useForm","resolver","yupResolver","defaultValues","tags","reset","watch","handleSubmit","formState","isSubmitting","isValid","async","console","log","data","Stack","freeSolo","options","map","option","ChipProps","size","Button","type","open","Dialog","maxWidth","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","mt","openDialog","setOpenDialog","useState","overflowY","maxHeight","Search","placeholder","inputProps","Link","IconButton","style","Divider","flexGrow","timeout","clickOnTrack","ChatList","el","pinned","idx","ChatElement"],"sourceRoot":""}